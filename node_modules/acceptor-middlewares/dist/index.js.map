{"version":3,"file":null,"sources":["../src/config.js","../src/acceptors.js","../src/memory-cache-proxy.js","../src/stat.js","../src/index.js"],"sourcesContent":["import debug from 'debug';\nexport const error = debug('acceptor-middlewares:error');\nexport const info = debug('acceptor-middlewares:info');\n","/*\neslint-disable no-underscore-dangle, import/no-unresolved, import/extensions\n */\n\nimport { ObjectId } from 'mongodb';\nimport { SUCCESS, INVALID_INTEGER,\n  OBJECT_IS_NOT_FOUND, SERVER_FAILED, OBJECT_IS_UNDEFINED_OR_NULL } from 'nagu-validates';\nimport AcceptorManager from 'jkef-model';\nimport { error, info } from './config';\n\nexport default class AcceptorMiddlewares {\n  constructor(mongoUrl, acceptorCollection = 'acceptors') {\n    this.mongoUrl = mongoUrl;\n    this.collectionName = acceptorCollection;\n    this.acceptorManager = new AcceptorManager(mongoUrl, acceptorCollection);\n  }\n\n  // 插入数据的中间件\n  insert(\n    // 定义如何获取待插入的数据，此数据必须包括\"name, idCard: { type, number }\"。默认取req.body\n    getData = req => req.body,\n    // 定义插入数据之后如何操作，默认为执行下一个中间件\n    success = (data, req, res, next) => next(),\n    // 定义插入数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const acceptor = getData(req, res);\n        // 姓名、证件信息均不能为空\n        if (!acceptor\n          || !acceptor.name\n          || !acceptor.idCard\n          || !acceptor.idCard.number\n        ) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: '姓名、证件信息均不能为空' }, req, res, next);\n          return;\n        }\n        // 1. 保存数据到数据库中\n        const insertedId = await this.acceptorManager.insert(acceptor);\n        // 2 返回结果\n        success({\n          ...acceptor,\n          _id: acceptor._id || insertedId,\n        }, req, res, next);\n      } catch (e) {\n        fail({ ret: SERVER_FAILED, msg: e }, req, res, next);\n      }\n    };\n  }\n\n  // 根据IdCard.Number查找acceptor\n  findOneByIdCardNumber(\n    getIdCardNumber = () => {},\n    success = (acceptor, req, res, next) => next(),\n    fail = (err, req, res) => res.send(err),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const number = getIdCardNumber(req, res);\n        if (!number) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: '必须指定idcard.number' }, req, res, next);\n          return;\n        }\n        const doc = await this.acceptorManager.findOneByIdCardNumber(number);\n        success(doc, req, res, next);\n      } catch (e) {\n        fail({ ret: SERVER_FAILED, msg: e }, req, res, next);\n      }\n    };\n  }\n\n  // 通过Id获取数据的中间件\n  getById(\n    // 定义如何获取数据的_id\n    getId = () => null,\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res) => res.send({ ret: SUCCESS, data }),\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const id = getId(req, res);\n        if (!id) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: '必须提供id' }, req, res, next);\n          return;\n        }\n        const data = await this.acceptorManager.findById(id);\n        if (!data) {\n          fail({ ret: OBJECT_IS_NOT_FOUND, msg: '对象不存在' }, req, res, next);\n          return;\n        }\n        success(data, req, res, next);\n      } catch (e) {\n        fail({\n          ret: SERVER_FAILED,\n          msg: e,\n        }, req, res, next);\n      }\n    };\n  }\n\n  listByRecord(\n    // 获取查询参数\n    getParams = () => null,\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res, next) => next(),\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const params = getParams(req, res);\n        if (!params) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: '查询参数必须指定' }, req, res, next);\n          return;\n        }\n        let { pageIndex, pageSize } = params;\n        if (pageIndex) {\n          if (!Number.isInteger(pageIndex) || pageIndex < 0) {\n            fail({ ret: INVALID_INTEGER, msg: 'pageIndex必须是0以上的整数' }, req, res, next);\n            return;\n          }\n        } else pageIndex = 0;\n        if (pageSize) {\n          if (!Number.isInteger(pageSize) || pageSize < 0) {\n            fail({ ret: INVALID_INTEGER, msg: 'pageSize必须是0以上的整数' }, req, res, next);\n            return;\n          }\n        } else pageSize = 100;\n        const limit = pageSize;\n        const skip = pageSize * pageIndex;\n        const data = await this.acceptorManager.listByRecord({\n          ...params,\n          limit,\n          skip,\n        });\n        success(data, req, res, next);\n      } catch (msg) {\n        fail({ ret: SERVER_FAILED, msg }, req, res, next);\n      }\n    };\n  }\n\n  updateById(\n    getId = () => null,\n    getNewData = () => null,\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res, next) => next(),\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const _id = getId(req, res);\n        if (!_id) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: 'id不能为空' }, req, res, next);\n          return;\n        }\n        const newData = getNewData(req, res);\n        if (!newData) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: '新数据不能为空' }, req, res, next);\n          return;\n        }\n        const result = await this.acceptorManager.updateById({ ...newData, _id });\n        success(result, req, res, next);\n      } catch (msg) {\n        fail({ ret: SERVER_FAILED, msg }, req, res, next);\n      }\n    };\n  }\n\n  // 添加教育经历\n  addEdu(\n    // 定义如何获取数据的_id\n    getId = () => null,\n    // 获取教育经历信息\n    getEdu = req => req.body,\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res, next) => next(),\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const id = getId(req, res);\n        if (!id) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: 'id不能为空' }, req, res, next);\n          return;\n        }\n        const edu = getEdu(req, res);\n        if (!edu\n          || !edu.name\n          || !edu.degree\n          || !edu.year\n          || !Number.isInteger(edu.year)\n        ) {\n          fail({\n            ret: OBJECT_IS_UNDEFINED_OR_NULL,\n            msg: '必须提供学校名称、层次和入学年份，入学年份必须是数字',\n          }, req, res, next);\n          return;\n        }\n        const result = await this.acceptorManager.addEdu(id, edu);\n        success(result, req, res, next);\n      } catch (msg) {\n        fail({ ret: SERVER_FAILED, msg }, req, res, next);\n      }\n    };\n  }\n\n  // 添加教育经历\n  removeEdu(\n    // 定义如何获取数据的_id\n    getId = () => null,\n    // 获取教育经历信息\n    getEdu = req => req.body,\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res, next) => next(),\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const id = getId(req, res);\n        if (!id) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: 'id不能为空' }, req, res, next);\n          return;\n        }\n        const edu = getEdu(req, res);\n        if (!edu\n         || !edu.name\n         || !edu.year\n         || !Number.isInteger(edu.year)\n       ) {\n          fail({\n            ret: OBJECT_IS_UNDEFINED_OR_NULL,\n            msg: '必须提供学校名称和入学年份，入学年份必须是数字',\n          }, req, res, next);\n          return;\n        }\n        const result = await this.acceptorManager.removeEdu(id, edu);\n        success(result, req, res, next);\n      } catch (msg) {\n        fail({ ret: SERVER_FAILED, msg }, req, res, next);\n      }\n    };\n  }\n\n  // 添加工作经历\n  addCareer(\n    // 定义如何获取数据的_id\n    getId = () => null,\n    // 获取工作经历信息\n    getCareer = req => req.body,\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res, next) => next(),\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const id = getId(req, res);\n        if (!id) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: 'id不能为空' }, req, res, next);\n          return;\n        }\n        const career = getCareer(req, res);\n        if (!career\n         || !career.name\n         || !career.year\n         || !Number.isInteger(career.year)\n        ) {\n          fail({\n            ret: OBJECT_IS_UNDEFINED_OR_NULL,\n            msg: '必须提供公司名称和入职年份，入职年份必须是数字',\n          }, req, res, next);\n          return;\n        }\n        const result = await this.acceptorManager.addCareer(id, career);\n        success(result, req, res, next);\n      } catch (msg) {\n        fail({ ret: SERVER_FAILED, msg }, req, res, next);\n      }\n    };\n  }\n\n  // 删除工作经历\n  removeCareer(\n    // 定义如何获取数据的_id\n    getId = () => null,\n    // 获取教育经历信息\n    getCareer = req => req.body,\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res, next) => next(),\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const id = getId(req, res);\n        if (!id) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: 'id不能为空' }, req, res, next);\n          return;\n        }\n        const career = getCareer(req, res);\n        if (!career\n         || !career.name\n         || !career.year\n         || !Number.isInteger(career.year)\n       ) {\n          fail({\n            ret: OBJECT_IS_UNDEFINED_OR_NULL,\n            msg: '必须提供学校名称和入学年份，入学年份必须是数字',\n          }, req, res, next);\n          return;\n        }\n        const result = await this.acceptorManager.removeCareer(id, career);\n        success(result, req, res, next);\n      } catch (msg) {\n        fail({ ret: SERVER_FAILED, msg }, req, res, next);\n      }\n    };\n  }\n\n  // 添加奖助记录\n  addRecord(\n    // 定义如何获取数据的_id\n    getId = () => null,\n    // 获取奖助信息\n    getRecord = req => req.body,\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res, next) => next(),\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const id = getId(req, res);\n        if (!id) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: 'id不能为空' }, req, res, next);\n          return;\n        }\n        const record = getRecord(req, res);\n        if (!record\n         || !record.project\n         || !record.amount\n         || !Number.isInteger(record.amount * 1000)\n         || !record.date\n         || !(record.date instanceof Date)\n        ) {\n          fail({\n            ret: OBJECT_IS_UNDEFINED_OR_NULL,\n            msg: '必须提供项目名称和金额，金额必须是数字，日期必须是Date类型',\n          }, req, res, next);\n          return;\n        }\n        const recordId = await this.acceptorManager.addRecord(id, {\n          ...record,\n          amount: record.amount * 1000,\n          _id: new ObjectId(),\n        });\n        success(recordId, req, res, next);\n      } catch (msg) {\n        fail({ ret: SERVER_FAILED, msg }, req, res, next);\n      }\n    };\n  }\n\n  removeRecord(\n    // 定义如何获取数据的_id\n    getId = () => null,\n    // 获取奖助记录Id\n    getRecordId = () => null,\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res, next) => next(),\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const id = getId(req, res);\n        if (!id) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: 'id不能为空' }, req, res, next);\n          return;\n        }\n        const recordId = getRecordId(req, res);\n        if (!recordId) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: 'recordId不能为空' }, req, res, next);\n          return;\n        }\n        const result = await this.acceptorManager.removeRecord(id, recordId);\n        success(result, req, res, next);\n      } catch (msg) {\n        fail({ ret: SERVER_FAILED, msg }, req, res, next);\n      }\n    };\n  }\n\n  removeById(\n    // 定义如何获取数据的_id\n    getId = () => null,\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res) => res.send({ ret: SUCCESS, data }),\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n  ) {\n    return async (req, res, next) => {\n      try {\n        const id = getId(req, res);\n        if (!id) {\n          fail({ ret: OBJECT_IS_UNDEFINED_OR_NULL, msg: '必须提供id' }, req, res, next);\n          return;\n        }\n        const result = await this.acceptorManager.removeById(id);\n        success(result, req, res, next);\n      } catch (e) {\n        fail({\n          ret: SERVER_FAILED,\n          msg: e,\n        }, req, res, next);\n      }\n    };\n  }\n}\n","import cache from 'memory-cache';\nimport debug from 'debug';\n\nconst error = debug('memory-cache-proxy:error');\nconst info = debug('memory-cache-proxy:info');\n\nexport default async (func, cacheOptions, args = []) => {\n  info(`${func.name} Cache Proxy`);\n  // 检查cacheOptions是否正确\n  if (!cacheOptions || !cacheOptions.key || !cacheOptions.expire) {\n    error('cacheOptions must be provided.');\n    throw new Error('cacheOptions must be provided.');\n  }\n\n  // 检查args参数是否是数组\n  if (!Array.isArray(args)) {\n    error('parameter args must be a array');\n    throw new Error('parameter args must be a array');\n  }\n\n  try {\n    let data = cache.get(cacheOptions.key);\n\n    // 强制刷新或缓存中没有数据，从func获取\n    if (cacheOptions.forceFlush || !data) {\n      info(`${func.name} get data from cache failed. cacheKey:`, cacheOptions.key);\n\n      data = await func(...args);\n      cache.put(cacheOptions.key, data, cacheOptions.expire);\n      info('putted data to cache. cacheOptions=', cacheOptions);\n    } else {\n      info('retrived data from cache. cacheKey=', cacheOptions.key);\n    }\n    return data;\n  } catch (e) {\n    error(e.message);\n    error(e.stack);\n    throw e;\n  }\n};\n","/*\neslint-disable import/extensions, import/no-unresolved, no-param-reassign\n */\nimport AcceptorManager from 'jkef-model';\nimport { SERVER_FAILED } from 'nagu-validates';\nimport cacheProxy from './memory-cache-proxy';\n\nexport default class StatMiddlewares {\n  constructor(mongoUrl, acceptorCollection = 'acceptors') {\n    this.mongoUrl = mongoUrl;\n    this.collectionName = acceptorCollection;\n    this.acceptorManager = new AcceptorManager(mongoUrl, acceptorCollection);\n  }\n\n  getStatByProject(\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res, next) => {\n      res.stateByProject = data;\n      next();\n    },\n\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n\n    // 缓存选项，默认缓存10个小时\n    cacheOptions = {\n      key: 'jkef:acceptors:stat:byproject',\n      expire: 10 * 3600 * 1000,\n    }\n  ) {\n    return async (req, res, next) => {\n      try {\n        const data = await cacheProxy(\n          this.acceptorManager.getStatByProject.bind(this.acceptorManager),\n          cacheOptions\n        );\n        success(data, req, res, next);\n      } catch (msg) {\n        fail({ ret: SERVER_FAILED, msg }, req, res, next);\n      }\n    };\n  }\n\n  getStatByYear(\n    // 定义获取数据之后如何操作，默认为返回成功代码及数据\n    success = (data, req, res, next) => {\n      res.stateByYear = data;\n      next();\n    },\n\n    // 定义获取数据失败时如何操作，默认为返回失败代码及描述\n    fail = (e, req, res) => res.send(e),\n\n    // 缓存选项，默认缓存10个小时\n    cacheOptions = {\n      key: 'jkef:acceptors:stat:byyear',\n      expire: 10 * 3600 * 1000,\n    }\n  ) {\n    return async (req, res, next) => {\n      try {\n        // const data = await this.acceptorManager.getStatByYear();\n        const data = await cacheProxy(\n          this.acceptorManager.getStatByYear.bind(this.acceptorManager),\n          cacheOptions\n        );\n        success(data, req, res, next);\n      } catch (msg) {\n        fail({ ret: SERVER_FAILED, msg }, req, res, next);\n      }\n    };\n  }\n}\n","import acceptors from './acceptors';\nimport stat from './stat';\n\nexport const StatMiddlewares = stat;\nexport const AcceptorMiddlewares = acceptors;\nexport default acceptors;\n"],"names":["error","debug","info","AcceptorMiddlewares","mongoUrl","acceptorCollection","collectionName","acceptorManager","AcceptorManager","getData","req","body","success","data","res","next","fail","e","send","acceptor","name","idCard","number","ret","OBJECT_IS_UNDEFINED_OR_NULL","msg","insert","_id","insertedId","SERVER_FAILED","getIdCardNumber","err","findOneByIdCardNumber","doc","getId","SUCCESS","id","findById","OBJECT_IS_NOT_FOUND","getParams","params","pageIndex","pageSize","INVALID_INTEGER","listByRecord","getNewData","newData","updateById","result","getEdu","edu","degree","year","addEdu","removeEdu","getCareer","career","addCareer","removeCareer","getRecord","record","project","amount","date","Date","addRecord","ObjectId","recordId","getRecordId","removeRecord","removeById","func","cacheOptions","args","key","expire","Error","Array","isArray","cache","get","forceFlush","put","message","stack","StatMiddlewares","stateByProject","cacheProxy","getStatByProject","bind","stateByYear","getStatByYear","stat","acceptors"],"mappings":"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"}